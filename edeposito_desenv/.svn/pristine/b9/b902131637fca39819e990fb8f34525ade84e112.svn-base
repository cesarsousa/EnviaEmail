<?xml version="1.0" encoding="UTF-8"?>
<!--
 | Grupo e-Patentes
 | ================
 | Diretoria de Patentes
 | Instituto Nacional da Propriedade Industrial
 | Brasil
 +-->

<xsl:stylesheet version="1.0"
	xsi:schemaLocation="http://www.w3.org/1999/XSL/Transform xslt.xsd"
	xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
	xmlns:exslt="http://exslt.org/common"
	xmlns:fo="http://www.w3.org/1999/XSL/Format"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xalan="http://xml.apache.org/xalan" exclude-result-prefixes="xalan">
	
	<!-- Utilizar package-data.xml como fonte dos dados da assinatura -->
	<xsl:variable name="package-data"
		select="document('package-data.xml')/package-data" />
	
	<!-- ***** Constantes ***** -->
	
	<!-- Quando o valor for apenas número, considerar que está em milimetros (mm), exceto quando especificado diferentemente -->
	
	<xsl:variable name="font-name" select="'sans-serif'" />
	<xsl:variable name="footer-font-size" select="'6pt'" />
	<xsl:variable name="header-font-size" select="'6pt'" />
	<xsl:variable name="default-font-size" select="'8pt'" />
	<xsl:variable name="section-font-size" select="'9pt'" />
	<xsl:variable name="big-font-size" select="'10pt'" />
	
	<xsl:variable name="true" select="'true'" />
	<xsl:variable name="false" select="'false'" />
	
	<xsl:variable name="vazio" select="''" />
	<xsl:variable name="nulo" select="'---'" />
	
	<xsl:variable name="thin-line-type" select="'solid black 0.2pt'" />
	<xsl:variable name="thick-line-type" select="'solid black 0.7pt'" />
	<xsl:variable name="no-line-type" select="'solid white 0.0pt'" />
	
	<xsl:variable name="page_height" select="297" />
	<xsl:variable name="page_width" select="210" />
	
	<!-- Não utilizar soma das marges direita e esquerda maior do que 36 (criará problemas com tamanho das etiquetas) -->
	<xsl:variable name="page-top-margin" select="10" />
	<xsl:variable name="page-bottom-margin" select="10" />
	<xsl:variable name="page-left-margin" select="20" />
	<xsl:variable name="page-right-margin" select="16" />
	
	<xsl:variable name="largura-disponivel" select="$page_width - $page-left-margin - $page-right-margin" />
	
	<xsl:variable name="margem-cabecalho-PP" select="70" />
	<xsl:variable name="margem-cabecalho-DP" select="38" />
	<xsl:variable name="margem-rodape" select="6" />
	
	<xsl:variable name="largura-checkbox" select="5"/>
	
	<!-- Recuo direito das tabelas é um valor correspondente a porcentagem (exemplo: 0.125 = 12.5%) -->
	<xsl:variable name="recuo-direito-tabelas" select="0.0"/>
	
	<xsl:variable name="interessado" select="'applicant'" />
	<xsl:variable name="interessadoInventor" select="'applicant-inventor'" />
	<xsl:variable name="inventor" select="'inventor'" />
	<xsl:variable name="procurador" select="'agent'" />
	
	<xsl:variable name="public" select="'public'"/>
	<xsl:variable name="non-public" select="'non-public'"/>
	
	<xsl:variable name="pessoaFisica" select="'natural'" />
	<xsl:variable name="pessoaJuridica" select="'legal'" />
	
	<xsl:variable name="patente-de-invencao" select="'patente de invencao'"/>
	<xsl:variable name="modelo-de-utilidade" select="'modelo de utilidade'"/>
	<xsl:variable name="patente-de-invencao-dividido" select="'patente de invencao dividido'"/>
	<xsl:variable name="modelo-de-utilidade-dividido" select="'modelo de utilidade dividido'"/>
	<xsl:variable name="certificado-de-adicao" select="'certificado de adicao'"/>
	
	<xsl:variable name="BR" select="'BR'" />
	<xsl:variable name="ESPEC-BR" select="'ESPEC-BR'" />
	
	<xsl:variable name="legendasDocumentos">
		<leg doc-code="XXXXXXXXXX" texto="Documento n&#227;o reconhecido" paginas="true"/>
		<leg doc-code="RELDESCMODIF" texto="Modifica&#231;&#245;es no relat&#243;rio descritivo em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="REIVINDMODIF" texto="Modifica&#231;&#245;es nas reivindica&#231;&#245;es em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="RESUMOMODIF" texto="Modifica&#231;&#245;es no resumo em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="DESENHOSMOD" texto="Modifica&#231;&#245;es nos desenhos em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="RELATDESCTXT" texto="Relat&#243;rio descritivo em formato eletr&#244;nico texto" paginas="false"/>
		<leg doc-code="REIVINDTXT" texto="Reivindica&#231;&#245;es em formato eletr&#244;nico texto" paginas="false"/>
		<leg doc-code="RESUMOTXT" texto="Resumo em formato eletr&#244;nico texto" paginas="false"/>
		<leg doc-code="PERIODOGRACA" texto="Declara&#231;&#227;o de divulga&#231;&#227;o n&#227;o prejudicial (Per&#237;odo de gra&#231;a) em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="SEQBIOTXT" texto="Listagem de sequ&#234;ncia biol&#243;gica em formato eletr&#244;nico texto" paginas="false"/>
		<leg doc-code="SEQBIOLOG" texto="Listagem de sequ&#234;ncia biol&#243;gica em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="CCSEQBIO" texto="C&#243;digo de controle de listagem de sequ&#234;ncia biol&#243;gica em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="CCSEQBIOXML" texto="C&#243;digo de controle de listagem de sequ&#234;ncia biol&#243;gica em formato eletr&#244;nico XML" paginas="false"/>
		<leg doc-code="DECLIST" texto="Declara&#231;&#227;o de acordo com a Resolu&#231;&#227;o relativa a Listagem de Sequ&#234;ncias em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="RECIBOMATBIO" texto="Recibo de material biol&#243;gico depositado em institui&#231;&#227;o deposit&#225;ria em formato eletr&#244;nico PDF" paginas="true"/> 
		<leg doc-code="RECIBOMATBIO" texto="Recibo de material biol&#243;gico depositado em institui&#231;&#227;o deposit&#225;ria em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="PRIORIDADE" texto="Documento de prioridade em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="PRIORTRADUC" texto="Tradu&#231;&#227;o do documento de prioridade em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="PROCURACAO" texto="Procura&#231;&#227;o em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="GRU" texto="Guia de Recolhimento da Uni&#227;o (GRU) paga com comprovante de pagamento em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="CONTTRABALHO" texto="Contrato de trabalho do empregado com a empresa em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="CESSAO" texto="Documento de cess&#227;o ou autoriza&#231;&#227;o do inventor em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="IDENTIFIC" texto="Documento de identifica&#231;&#227;o de pessoa f&#237;sica em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="SIGILOINV" texto="Documento de solicita&#231;&#227;o de sigilo de inventor conforme Art. 6&#186; da LPI incluindo a identifica&#231;&#227;o do(s) inventor(es) para o(s) qual(is) se solicita sigilo em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="COMPV-RESID" texto="Comprovante de resid&#234;ncia em formato eletr&#244;nico PDF" paginas="true"/> 
		<leg doc-code="CONTRSOCIAL" texto="Contrato social em formato eletr&#244;nico PDF" paginas="true"/> 
		<leg doc-code="PORTARIA" texto="Portarias de compet&#234;ncia/nomea&#231;&#227;o (no caso de &#243;rg&#227;os governamentais) em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="ESCLARECIMEN" texto="Esclarecimentos quanto ao processo em formato eletr&#244;nico PDF" paginas="true"/>		
		<leg doc-code="IPRP" texto="Relat&#243;rio preliminar internacional de patenteabilidade em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="ISR" texto="Relat&#243;rio de busca internacional em formato eletr&#244;nico PDF" paginas="true"/>		
		<leg doc-code="IPER" texto="Relat&#243;rio de exame internacional em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="PUBL.WO" texto="Publica&#231;&#227;o internacional PCT em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="SOLFALTA" texto="Restabelecimento de direito por falta em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="SOLPREC" texto="Restabelecimento de direito por precau&#231;&#227;o em formato eletr&#244;nico PDF" paginas="true"/>		
		<leg doc-code="PCTMODIF" texto="Modifica&#231;&#245;es no PCT em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="WRITTENOPIN" texto="Opini&#227;o escrita da fase internacional em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="DECLARAC" texto="Declara&#231;&#227;o de qualquer natureza em formato eletr&#244;nico PDF" paginas="true"/>		
		<leg doc-code="CUMPREXIGENC" texto="Cumprimento de exig&#234;ncia em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="RECURSOS" texto="Recursos em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="RECURSO-INDE" texto="Recurso contra o indeferimento em formato eletr&#244;nico PDF" paginas="true"/>		
		<leg doc-code="SUBSIDIOS" texto="Subs&#237;dios ao exame t&#233;cnico em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="MANIFESTACAO" texto="Manifesta&#231;&#227;o do requerente em formato eletr&#244;nico PDF" paginas="true"/>
		<leg doc-code="CONTESTACAO" texto="Contesta&#231;&#227;o de caducidade/nulidade em formato eletr&#244;nico PDF" paginas="true"/>		
		<leg doc-code="OUTROS" texto="Documentos de qualquer outra natureza em formato eletr&#244;nico PDF" paginas="true"/>
	</xsl:variable>
	<xsl:variable name="legendasDocumentosNS" select="exslt:node-set($legendasDocumentos)"/>
	<xsl:variable name="naoConhecido" select="'XXXXXXXXXX'"/>

	<!-- Criar variável com os nomes dos meses associados aos numero -->
	<xsl:variable name="meses">
		<janeiro>01</janeiro>
		<fevereiro>02</fevereiro>
		<março>03</março>
		<abril>04</abril>
		<maio>05</maio>
		<junho>06</junho>
		<julho>07</julho>
		<agosto>08</agosto>
		<setembro>09</setembro>
		<outubro>10</outubro>
		<novembro>11</novembro>
		<dezembro>12</dezembro>
	</xsl:variable>
	
	<xsl:variable name="versaoFormulario" select="requisicao/@formulario-versao" />

	<!-- ***** Início do processamento ***** -->
	
	<!-- Começando a ler o XML fonte -->
	<xsl:template match="requisicao">
		<fo:root font-family="{$font-name}" font-size="{$default-font-size}">
			<!-- Preparar o layout mestre -->
			<xsl:call-template name="prepararLayout" />

			<!-- Definir e iniciar a sequência de páginas -->
			<fo:page-sequence master-reference="Formulario">
				<xsl:call-template name="prepararCabecalhosERodapes"></xsl:call-template>

				<!-- Criando o conteúdo -->
				<fo:flow flow-name="xsl-region-body">

					<fo:table table-layout="fixed">
						<xsl:variable name="partes-c1" select="round($largura-disponivel * 0.06)"/>
						<xsl:variable name="partes-c2" select="round($largura-disponivel * 0.21)"/>
						<xsl:variable name="partes-c3" select="$largura-disponivel - $partes-c1 - $partes-c2"/>

						<fo:table-column column-width="{$partes-c1}mm" />
						<fo:table-column column-width="{$partes-c2}mm" />
						<fo:table-column column-width="{$partes-c3}mm" />
						<fo:table-body>
							<xsl:call-template name="section-apresentacao"/>
							<xsl:call-template name="section-interessados"/>
							<xsl:call-template name="section-natureza">
								<xsl:with-param name="tamanho" select="$partes-c3"/>
							</xsl:call-template>
							<xsl:call-template name="section-titulo"/>
							<xsl:call-template name="section-tipocopia">
								<xsl:with-param name="tamanho" select="$partes-c2 + $partes-c3"/>
							</xsl:call-template>
							<xsl:call-template name="section-copia">
								<xsl:with-param name="tamanho" select="$partes-c2 + $partes-c3"/>
							</xsl:call-template>
							<xsl:call-template name="section-documentos-anexados">
								<xsl:with-param name="tamanho" select="$partes-c2 + $partes-c3"/>
							</xsl:call-template>
							<xsl:call-template name="section-gru">
								<xsl:with-param name="tamanho" select="$partes-c2 + $partes-c3"/>
							</xsl:call-template>
							<xsl:call-template name="section-declaracoes">
								<xsl:with-param name="tamanho" select="$partes-c2 + $partes-c3"/>
							</xsl:call-template>
							<xsl:call-template name="section-assinatura"/>
						</fo:table-body>
					</fo:table>
					<fo:block id="theEnd" />
				</fo:flow>
			</fo:page-sequence>
		</fo:root>
	</xsl:template>

	<!-- ***** Métodos de definição de conteúdo (SECTIONS) ***** -->

	<!-- Apresentação da petição -->
	<xsl:template name="section-apresentacao">
		<fo:table-row keep-with-next="always">
			<fo:table-cell number-columns-spanned="3">
				<fo:block font-weight="bold" font-size="{$section-font-size}" line-height="1.5">
					Ao Instituto Nacional da Propriedade Industrial:
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>

	<!-- Requerentes -->
	<xsl:template name="section-interessados">
		<fo:table-row border-top="{$thick-line-type}" font-weight="bold" font-size="{$section-font-size}" keep-with-next="always">
			<fo:table-cell padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					1.
				</fo:block>
			</fo:table-cell>
			<fo:table-cell number-columns-spanned="2" padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					Interessado:
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		<xsl:choose>
			<xsl:when test="not(participantes/interessados/interessado)">
				<xsl:call-template name="imprimir-parte">
					<xsl:with-param name="imprimir-vazio" select="$true"/>
					<xsl:with-param name="parte" select="$interessado"/>
					<xsl:with-param name="inventorAnonimo" select="$false"/>
				</xsl:call-template>
			</xsl:when>
			<xsl:otherwise>
				<xsl:for-each select="participantes/interessados/interessado">
					<xsl:call-template name="imprimir-parte">
						<xsl:with-param name="imprimir-vazio" select="$false"/>
						<xsl:with-param name="parte" select="$interessado"/>
						<xsl:with-param name="inventorAnonimo" select="$false"/>
					</xsl:call-template>
				</xsl:for-each>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<!-- Natureza do pedido -->
	<xsl:template name="section-natureza">
		<xsl:param name="tamanho" />
		
		<fo:table-row border-top="{$thick-line-type}" font-weight="bold" font-size="{$section-font-size}" keep-with-next="always">
			<fo:table-cell padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					2.
				</fo:block>
			</fo:table-cell>
			<fo:table-cell padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					Natureza:
				</fo:block>
			</fo:table-cell>
			<fo:table-cell padding-top="1mm" font-size="{$default-font-size}" display-align="center" border-top="{$thick-line-type}">
				<fo:block>
					<xsl:call-template name="imprimir-natureza">
						<xsl:with-param name="tamanho" select="$tamanho"/>
					</xsl:call-template>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		
		<xsl:call-template name="imprimir-numero-pedido"/>
		
		<!-- Espaçador -->
		<fo:table-row height="1mm" keep-with-previous="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>

	<!-- Título do pedido -->
	<xsl:template name="section-titulo">
		<fo:table-row border-top="{$thick-line-type}" font-weight="bold" font-size="{$section-font-size}" keep-with-next="always">
			<fo:table-cell padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					3.
				</fo:block>
			</fo:table-cell>
			<fo:table-cell number-columns-spanned="2" padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					T&#237;tulo da Inven&#231;&#227;o, do Modelo de Utilidade ou Certificado de Adi&#231;&#227;o (54):
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row height="1mm" keep-with-next="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row>
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
			<fo:table-cell number-columns-spanned="2">
				<fo:block>
					<xsl:choose>
						<xsl:when test="normalize-space(info-processo/titulo) = $vazio">
							<xsl:value-of select="$nulo"/>
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="info-processo/titulo"/>
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		
		<!-- Espaçador -->
		<fo:table-row height="1mm" keep-with-previous="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>


	<!-- O que se requer -->
	<xsl:template name="section-tipocopia">
		<xsl:param name="tamanho" />
		
		<fo:table-row border-top="{$thick-line-type}" font-weight="bold" font-size="{$section-font-size}" keep-with-next="always">
			<fo:table-cell padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					4.
				</fo:block>
			</fo:table-cell>
			<fo:table-cell number-columns-spanned="2" padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					Requer:
					<fo:inline font-weight="normal" font-size="{$default-font-size}">
						(informe o tipo de cópia solicitada)
					</fo:inline>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row height="1mm">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		<xsl:call-template name="imprimir-tipocopia">
			<xsl:with-param name="tamanho" select="$tamanho"/>
		</xsl:call-template>
		
		<!-- Espaçador -->
		<fo:table-row height="1mm">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>
	
	<!-- O que se requer -->
	<xsl:template name="section-copia">
		<xsl:param name="tamanho" />
		
		<fo:table-row border-top="{$thick-line-type}" font-weight="bold" font-size="{$section-font-size}" keep-with-next="always">
			<fo:table-cell padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					5.
				</fo:block>
			</fo:table-cell>
			<fo:table-cell number-columns-spanned="2" padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					Documentos Solicitados:
					<fo:inline font-weight="normal" font-size="{$default-font-size}">
						(informe documentos, quantidades e observações)
					</fo:inline>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row height="1mm">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		<xsl:call-template name="imprimir-copia">
			<xsl:with-param name="tamanho" select="$tamanho"/>
		</xsl:call-template>
		
		<!-- Espaçador -->
		<fo:table-row height="1mm">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>	

	<!-- Documentos anexados -->
	<xsl:template name="section-documentos-anexados">
		<xsl:param name="tamanho" />
		
		<fo:table-row border-top="{$thick-line-type}" font-weight="bold" font-size="{$section-font-size}" keep-with-next="always">
			<fo:table-cell padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					6.
				</fo:block>
			</fo:table-cell>
			<fo:table-cell number-columns-spanned="2" padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					Documentos Anexados:&#x20;
					<fo:inline font-weight="normal" font-size="{$default-font-size}">
						(assinale e indique tamb&#233;m o n&#250;mero de folhas)
					</fo:inline>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row height="1mm" keep-with-next="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		<xsl:call-template name="imprimir-documentos-anexados">
			<xsl:with-param name="tamanho" select="$tamanho"/>
		</xsl:call-template>
		
		<!-- Espaçador -->
		<fo:table-row height="1mm" keep-with-previous="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>
	
	<!-- GRU isenta de pagamento -->
	<xsl:template name="section-gru">
		<xsl:param name="tamanho" />
		
		<fo:table-row border-top="{$thick-line-type}" font-weight="bold" font-size="{$section-font-size}" keep-with-next="always">
			<fo:table-cell padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					7.
				</fo:block>
			</fo:table-cell>
			<fo:table-cell number-columns-spanned="2" padding-top="1mm" border-top="{$thick-line-type}">
				
				<fo:block>
					Guia(s) de Recolhimento da União - GRU(s):&#x20;
					<fo:inline font-weight="normal" font-size="{$default-font-size}">
						(assinale e indique tamb&#233;m se isenta ou n&#227;o isenta)
					</fo:inline>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row height="1mm" keep-with-next="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		<xsl:call-template name="imprimir-dados-gru">
			<xsl:with-param name="tamanho" select="$tamanho"/>
		</xsl:call-template>
		
		<!-- Espaçador -->
		<fo:table-row height="1mm" keep-with-previous="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>

	<!-- Declarações gerais -->
	<xsl:template name="section-declaracoes">
		<xsl:param name="tamanho" />
		
		<fo:table-row border-top="{$thick-line-type}" font-weight="bold" font-size="{$section-font-size}" keep-with-next="always">
			<fo:table-cell padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					8.
				</fo:block>
			</fo:table-cell>
			<fo:table-cell number-columns-spanned="2" padding-top="1mm" border-top="{$thick-line-type}">
				<fo:block>
					Declara&#231;&#245;es gerais do sistema para dep&#243;sito eletr&#244;nico de pedidos de patente do INPI:
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row height="1mm" keep-with-next="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		<xsl:call-template name="imprimir-declaracoes">
			<xsl:with-param name="tamanho" select="$tamanho"/>
		</xsl:call-template>
		
		<!-- Espaçador -->
		<fo:table-row height="1mm" keep-with-previous="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>

	<!-- Assinatura -->
	<xsl:template name="section-assinatura">
		<fo:table-row height="5mm" keep-with-next="always" keep-with-previous="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row keep-with-next="always">
			<fo:table-cell number-columns-spanned="3" text-align="center">
				<fo:block>
					<xsl:variable name="dataAssinatura" select="$package-data/signatories/signatory/electronic-signature/@date"/>
					<xsl:variable name="colocarAssinatura" select="not(normalize-space($dataAssinatura) = $vazio)"/>
					<xsl:variable name="diaAssinatura" select="substring($dataAssinatura,7,2)"/>
					<xsl:variable name="mesAssinatura" select="substring($dataAssinatura,5,2)"/>
					<xsl:variable name="anoAssinatura" select="substring($dataAssinatura,1,4)"/>
					<xsl:variable name="mesExtAssinatura" select="concat(name(xalan:nodeset($meses)/*[. = $mesAssinatura]),' ')"/>
					<xsl:variable name="dataCompAssinatura" select="concat($diaAssinatura, ' de ', $mesExtAssinatura, ' de ', $anoAssinatura)"/>
					<xsl:choose>
						<xsl:when test="$colocarAssinatura">
							<xsl:value-of select="$dataCompAssinatura"/>
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$nulo"/>
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row height="1mm" keep-with-next="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row keep-with-next="always">
			<fo:table-cell number-columns-spanned="3" text-align="center" border-top="{$thin-line-type}">
				<fo:block>
					Data
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row height="5mm" keep-with-next="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row keep-with-next="always">
			<fo:table-cell number-columns-spanned="3" text-align="center">
				<fo:block>
					<xsl:variable name="assinador" select="$package-data/signatories/signatory/electronic-signature/@place-signed"/>
					<xsl:choose>
						<xsl:when test="not(normalize-space($assinador) = $vazio)">
							<xsl:value-of select="$assinador"/>
						</xsl:when>
						<xsl:otherwise>
							Documento n&#227;o assinado digitalmente
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		<!-- Espaçador -->
		<fo:table-row height="1mm" keep-with-previous="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row keep-with-previous="always">
			<fo:table-cell number-columns-spanned="3" text-align="center" border-top="{$thin-line-type}">
				<fo:block>
					Assinatura (Interessado ou Procurador)
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>

	<!-- ***** Métodos de definição de conteúdo (ELEMENTS) ***** -->

	<xsl:template name="imprimir-parte">
		<xsl:param name="imprimir-vazio"/>
		<xsl:param name="parte"/>
		<xsl:param name="inventorAnonimo"/>
		
		<xsl:variable name="ehVazio" select="($imprimir-vazio = $true)"/>
		<xsl:variable name="tipoPessoa" select="@tipo-legal"/>>
		<xsl:variable name="ehPessoaFisica" select="$tipoPessoa = $pessoaFisica"/>
		<xsl:variable name="ehPME" select="($parte = $interessado) and not($ehPessoaFisica) and (@pme = $true)"/>
		<xsl:variable name="ehInventorAnonimo" select="($inventorAnonimo = $true)"/>
		
		<!-- Espaçador -->
		<fo:table-row height="1mm" keep-with-next="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		
		<!-- Nome -->
		<fo:table-row height="1mm" keep-with-next="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="$parte = $interessado">
							1.1
						</xsl:when>
						<xsl:when test="$parte = $inventor">
							BBB.1
						</xsl:when>
						<xsl:when test="$parte = $procurador">
							CCC.1
						</xsl:when>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					Nome:
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="$ehVazio">
							<xsl:value-of select="$nulo"/>
						</xsl:when>
						<xsl:when test="$ehInventorAnonimo">
							Um ou mais inventores requerem a n&#227;o divulga&#231;&#227;o de seu nome conforme Art. 6&#186; da LPI.
						</xsl:when>
						<xsl:when test="livro-endereco/nome-organizacao">
							<xsl:choose>
								<xsl:when test="not(normalize-space(livro-endereco/nome-organizacao) = $vazio)">
									<xsl:value-of select="livro-endereco/nome-organizacao"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="$nulo"/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:otherwise>
							<xsl:choose>
								<xsl:when test="not(normalize-space(concat(livro-endereco/nome, livro-endereco/sobrenome)) = $vazio)">
									<xsl:value-of select="concat(livro-endereco/nome, ' ', livro-endereco/sobrenome)"/>
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="$nulo"/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		
		<!-- Qualificação (só se for pessoa física) -->
		<xsl:if test="($ehVazio) or ($ehInventorAnonimo) or ($ehPessoaFisica)">
			<fo:table-row>
				<fo:table-cell>
					<fo:block>
						<xsl:choose>
							<xsl:when test="$parte = $interessado">
								1.2
							</xsl:when>
							<xsl:when test="$parte = $inventor">
								BBB.2
							</xsl:when>
							<xsl:when test="$parte = $procurador">
								CCC.2
							</xsl:when>
						</xsl:choose>
					</fo:block>
				</fo:table-cell>
				<fo:table-cell>
					<fo:block>
						Qualifica&#231;&#227;o:
					</fo:block>
				</fo:table-cell>
				<fo:table-cell>
					<fo:block>
						<xsl:choose>
							<xsl:when test="($ehVazio) or ($ehInventorAnonimo)">
								<xsl:value-of select="$nulo"/>
							</xsl:when>
							<xsl:when test="not(normalize-space(livro-endereco/qualificacao) = $vazio)">
								<xsl:value-of select="livro-endereco/qualificacao"/>
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="$nulo"/>
							</xsl:otherwise>
						</xsl:choose>
					</fo:block>
				</fo:table-cell>
			</fo:table-row>	
		</xsl:if>
		
		<!-- CPF/CNPJ -->
		<fo:table-row>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="$parte = $interessado">
							<xsl:choose>
								<xsl:when test="($ehVazio) or ($ehPessoaFisica)">
									1.3
								</xsl:when>
								<xsl:otherwise>
									1.2
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="$parte = $inventor">
							BBB.3
						</xsl:when>
						<xsl:when test="$parte = $procurador">
							<xsl:choose>
								<xsl:when test="($ehVazio) or ($ehPessoaFisica)">
									CCC.3
								</xsl:when>
								<xsl:otherwise>
									CCC.2
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="($ehVazio) or ($ehInventorAnonimo) or ($ehPessoaFisica)">
							CPF:
						</xsl:when>
						<xsl:otherwise>
							CNPJ:
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="not($ehInventorAnonimo) and not(normalize-space(livro-endereco/cpf-cnpj) = $vazio)">
							<xsl:choose>
								<xsl:when test="$ehPessoaFisica">
									<xsl:call-template name="formatar-cpf">
										<xsl:with-param name="numCPF" select="livro-endereco/cpf-cnpj"/>
									</xsl:call-template>
								</xsl:when>
								<xsl:otherwise>
									<xsl:call-template name="formatar-cnpj">
										<xsl:with-param name="numCNPJ" select="livro-endereco/cpf-cnpj"/>
									</xsl:call-template>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$nulo"/>
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		
		<!-- API -->
		<xsl:if test="($parte = $procurador) and (($ehVazio) or ($ehPessoaFisica))">
			<fo:table-row>
				<fo:table-cell>
					<fo:block>
						CCC.4
					</fo:block>
				</fo:table-cell>
				<fo:table-cell>
					<fo:block>
						API:
					</fo:block>
				</fo:table-cell>
				<fo:table-cell>
					<fo:block>
						<xsl:choose>
							<xsl:when test="$ehVazio">
								<xsl:value-of select="$nulo"/>
							</xsl:when>
							<xsl:when test="not(normalize-space(livro-endereco/api) = $vazio)">
								<xsl:value-of select="livro-endereco/api"/>
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="$nulo"/>
							</xsl:otherwise>
						</xsl:choose>
					</fo:block>
				</fo:table-cell>
			</fo:table-row>	
		</xsl:if>
		
		<!-- OAB -->
		<xsl:if test="($parte = $procurador) and (($ehVazio) or ($ehPessoaFisica))">
			<fo:table-row>
				<fo:table-cell>
					<fo:block>
						CCC.5
					</fo:block>
				</fo:table-cell>
				<fo:table-cell>
					<fo:block>
						OAB:
					</fo:block>
				</fo:table-cell>
				<fo:table-cell>
					<fo:block>
						<xsl:choose>
							<xsl:when test="$ehVazio">
								<xsl:value-of select="$nulo"/>
							</xsl:when>
							<xsl:when test="not(normalize-space(livro-endereco/oab) = $vazio)">
								<xsl:value-of select="livro-endereco/oab"/>
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="$nulo"/>
							</xsl:otherwise>
						</xsl:choose>
					</fo:block>
				</fo:table-cell>
			</fo:table-row>	
		</xsl:if>
		
		<!-- Endereço completo -->
		<fo:table-row>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="$parte = $interessado">
							<xsl:choose>
								<xsl:when test="($ehVazio) or ($ehPessoaFisica)">
									1.4
								</xsl:when>
								<xsl:otherwise>
									1.3
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="$parte = $inventor">
							BBB.4
						</xsl:when>
						<xsl:when test="$parte = $procurador">
							<xsl:choose>
								<xsl:when test="($ehVazio) or ($ehPessoaFisica)">
									CCC.6
								</xsl:when>
								<xsl:otherwise>
									CCC.3
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					Endere&#231;o Completo:
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="not($ehInventorAnonimo) and not(normalize-space(concat(livro-endereco/endereco/logradouro, livro-endereco/endereco/cidade, livro-endereco/endereco/estado-extenso, livro-endereco/endereco/pais-extenso)) = $vazio)">
							<xsl:value-of select="concat(livro-endereco/endereco/logradouro, ', ')" />
							<xsl:value-of select="concat(livro-endereco/endereco/cidade, ', ')" />
							<xsl:if test="not(normalize-space(livro-endereco/endereco/estado-extenso) = $vazio)">
								<xsl:value-of select="concat(livro-endereco/endereco/estado-extenso, ', ')" />
							</xsl:if>
							<xsl:value-of select="livro-endereco/endereco/pais-extenso" />
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$nulo"/>
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		
		<!-- CEP -->
		<fo:table-row>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="$parte = $interessado">
							<xsl:choose>
								<xsl:when test="($ehVazio) or ($ehPessoaFisica)">
									1.5
								</xsl:when>
								<xsl:otherwise>
									1.4
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="$parte = $inventor">
							BBB.5
						</xsl:when>
						<xsl:when test="$parte = $procurador">
							<xsl:choose>
								<xsl:when test="($ehVazio) or ($ehPessoaFisica)">
									CCC.7
								</xsl:when>
								<xsl:otherwise>
									CCC.4
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					CEP:
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="not($ehInventorAnonimo) and not(normalize-space(livro-endereco/endereco/codigo-postal) = $vazio)">
							<xsl:choose>
								<xsl:when test="livro-endereco/endereco/pais = $BR">
									<xsl:call-template name="formatar-cep">
										<xsl:with-param name="numCEP" select="livro-endereco/endereco/codigo-postal"/>
									</xsl:call-template>
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="livro-endereco/endereco/codigo-postal"/>
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$nulo"/>
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		
		<!-- Telefone -->
		<fo:table-row>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="$parte = $interessado">
							<xsl:choose>
								<xsl:when test="($ehVazio) or ($ehPessoaFisica)">
									1.6
								</xsl:when>
								<xsl:otherwise>
									1.5
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="$parte = $inventor">
							BBB.6
						</xsl:when>
						<xsl:when test="$parte = $procurador">
							<xsl:choose>
								<xsl:when test="($ehVazio) or ($ehPessoaFisica)">
									CCC.8
								</xsl:when>
								<xsl:otherwise>
									CCC.5
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					Telefone:
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="not($ehInventorAnonimo) and not(normalize-space(livro-endereco/telefone) = $vazio)">
							<xsl:value-of select="livro-endereco/telefone"/>
							
							<!--
							<xsl:choose>
								<xsl:when test="livro-endereco/endereco/pais = $BR">
									<xsl:call-template name="formatar-fone-fax">
										<xsl:with-param name="num" select="livro-endereco/telefone" />
									</xsl:call-template>
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="livro-endereco/telefone"/>
								</xsl:otherwise>
							</xsl:choose>
							-->
							
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$nulo"/>
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		
		<!-- Fax -->
		<fo:table-row>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="$parte = $interessado">
							<xsl:choose>
								<xsl:when test="($ehVazio) or ($ehPessoaFisica)">
									1.7
								</xsl:when>
								<xsl:otherwise>
									1.6
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="$parte = $inventor">
							BBB.7
						</xsl:when>
						<xsl:when test="$parte = $procurador">
							<xsl:choose>
								<xsl:when test="($ehVazio) or ($ehPessoaFisica)">
									CCC.9
								</xsl:when>
								<xsl:otherwise>
									CCC.6
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					Fax:
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="not($ehInventorAnonimo) and not(normalize-space(livro-endereco/fax) = $vazio)">
							<xsl:value-of select="livro-endereco/fax"/>
							<!--
							<xsl:choose>
								<xsl:when test="livro-endereco/endereco/pais = $BR">
									<xsl:call-template name="formatar-fone-fax">
										<xsl:with-param name="num" select="livro-endereco/fax" />
									</xsl:call-template>
								</xsl:when>
								<xsl:otherwise>
									<xsl:value-of select="livro-endereco/fax"/>
								</xsl:otherwise>
							</xsl:choose>
							-->
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$nulo"/>
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		
		<!-- E-mail -->
		<fo:table-row>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="$parte = $interessado">
							<xsl:choose>
								<xsl:when test="($ehVazio) or ($ehPessoaFisica)">
									1.8
								</xsl:when>
								<xsl:otherwise>
									1.7
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
						<xsl:when test="$parte = $inventor">
							BBB.8
						</xsl:when>
						<xsl:when test="$parte = $procurador">
							<xsl:choose>
								<xsl:when test="($ehVazio) or ($ehPessoaFisica)">
									CCC.10
								</xsl:when>
								<xsl:otherwise>
									CCC.7
								</xsl:otherwise>
							</xsl:choose>
						</xsl:when>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					E-mail:
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test="not($ehInventorAnonimo) and not(normalize-space(livro-endereco/email) = $vazio)">
							<xsl:value-of select="livro-endereco/email"/>
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$nulo"/>
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>

		<!-- Observacao
		<xsl:if test="$ehPME">
			<fo:table-row>
				<fo:table-cell>
					<fo:block>
						1.8
					</fo:block>
				</fo:table-cell>
				<fo:table-cell>
					<fo:block>
						Observa&#231;&#227;o:
					</fo:block>
				</fo:table-cell>
				<fo:table-cell>
					<fo:block>
						A organiza&#231;&#227;o &#233; uma microempresa, empresa de pequeno porte, cooperativa assim define a Lei, institui&#231;&#227;o de ensino e pesquisa, entidade sem fins lucrativos ou &#243;rg&#227;o p&#250;blico.
					</fo:block>
				</fo:table-cell>
			</fo:table-row>
		</xsl:if>
		-->
		
		<!-- Espaçador -->
		<fo:table-row height="1mm" keep-with-previous="always">
			<fo:table-cell border-bottom="{$thin-line-type}">
				<fo:block/>
			</fo:table-cell>
			<fo:table-cell border-bottom="{$thin-line-type}">
				<fo:block/>
			</fo:table-cell>
			<fo:table-cell border-bottom="{$thin-line-type}">
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>	

	<xsl:template name="imprimir-natureza">
		<xsl:param name="tamanho" />
		
		<fo:table table-layout="fixed">
			<xsl:variable name="colunas" select="round($tamanho div 3)"/>
			<fo:table-column column-width="{$colunas}mm"/>
			<fo:table-column column-width="{$colunas}mm"/>
			<fo:table-column column-width="{$colunas}mm"/>
			<xsl:variable name="ehPI">
				<xsl:choose>
					<xsl:when test="(info-processo/tipo-processo = $patente-de-invencao) or (info-processo/tipo-processo = $patente-de-invencao-dividido)">
						<xsl:value-of select="$true"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$false"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			<xsl:variable name="ehMU">
				<xsl:choose>
					<xsl:when test="(info-processo/tipo-processo = $modelo-de-utilidade) or (info-processo/tipo-processo = $modelo-de-utilidade-dividido)">
						<xsl:value-of select="$true"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$false"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			<xsl:variable name="ehCA">
				<xsl:choose>
					<xsl:when test="info-processo/tipo-processo = $certificado-de-adicao">
						<xsl:value-of select="$true"/>
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$false"/>
					</xsl:otherwise>
				</xsl:choose>
			</xsl:variable>
			<fo:table-body>
				<fo:table-row font-weight="normal">
					<fo:table-cell>
						<fo:block>
							<xsl:call-template name="imprimir-checkbox">
								<xsl:with-param name="checado" select="$ehPI"/>
							</xsl:call-template>
							<xsl:text>&#x20;</xsl:text>
							Inven&#231;&#227;o
						</fo:block>
					</fo:table-cell>
					<fo:table-cell>
						<fo:block>
							<xsl:call-template name="imprimir-checkbox">
								<xsl:with-param name="checado" select="$ehMU"/>
							</xsl:call-template>
							<xsl:text>&#x20;</xsl:text>
							Modelo de Utilidade
						</fo:block>
					</fo:table-cell>
					<fo:table-cell>
						<fo:block>
							<xsl:call-template name="imprimir-checkbox">
								<xsl:with-param name="checado" select="$ehCA"/>
							</xsl:call-template>
							<xsl:text>&#x20;</xsl:text>
							Certificado de Adi&#231;&#227;o
						</fo:block>
					</fo:table-cell>
				</fo:table-row>
			</fo:table-body>
		</fo:table>
	</xsl:template>

	<xsl:template name="imprimir-numero-pedido">
	
		<!-- Espaçador -->
		<fo:table-row height="1mm" keep-with-next="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		
		<!-- Nome -->
		<fo:table-row height="1mm" keep-with-next="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row>
			<fo:table-cell>
				<fo:block>
					2.1
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					N&#250;mero do pedido:
				</fo:block>
			</fo:table-cell>
			<fo:table-cell>
				<fo:block>
					<xsl:text>&#x20;</xsl:text>
					<xsl:variable name="numeroPedido" select="info-processo/processo"/>
					<xsl:choose>
						<xsl:when test="(normalize-space(concat($numeroPedido/tipo-extenso, $numeroPedido/numero)) != $vazio)">
							<xsl:call-template name="formatar-numero-processo">
								<xsl:with-param name="tipo" select="$numeroPedido/tipo-extenso"/>
								<xsl:with-param name="numero" select="$numeroPedido/numero"/>
							</xsl:call-template>
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$nulo"/>
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>	
		
	</xsl:template>
	
	<xsl:template name="imprimir-tipocopia">
		<xsl:param name="tamanho" />
		
		<xsl:variable name="tamanho-tabela" select="$tamanho - round($tamanho * $recuo-direito-tabelas)"/>
		
		<fo:table-row>
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
			<fo:table-cell number-columns-spanned="2">
				<fo:block>
					<fo:table table-layout="fixed">
						<xsl:variable name="coluna1" select="round($tamanho-tabela * 0.03)"/>
						<xsl:variable name="coluna3" select="$tamanho-tabela - $coluna1"/>
						
						<fo:table-column column-width="{$coluna1}mm" />
						<fo:table-column column-width="{$coluna3}mm" />
						<fo:table-body>
							<xsl:for-each select="info-processo/info-peticao/info">
								<xsl:choose>
									<xsl:when test="substring(@tipo,1,6) = 'COPIA_'">
										<xsl:call-template name="imprimir-linha-tipocopia" />
									</xsl:when>
									<xsl:otherwise>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:for-each>
						</fo:table-body>
					</fo:table>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>	
	
	
	<xsl:template name="imprimir-linha-tipocopia">
		<xsl:variable name="tipo" select="@tipo" />
		
		<fo:table-row>
			<fo:table-cell>
				<fo:block>
					<xsl:choose>
						<xsl:when test=". = $true">
							<xsl:call-template name="imprimir-checkbox">
								<xsl:with-param name="checado" select="$true"/>
							</xsl:call-template>
						</xsl:when>
						<xsl:otherwise>
							<xsl:call-template name="imprimir-checkbox">
								<xsl:with-param name="checado" select="$false"/>
							</xsl:call-template>
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
			<fo:table-cell text-align="justify">
				<fo:block>
					<xsl:value-of select="@descricao"/>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row height="1mm" keep-with-previous="always">
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
		</fo:table-row>
		<fo:table-row>
			<fo:table-cell height="0.5mm">
				<fo:block></fo:block>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>	

	<xsl:template name="imprimir-copia">
		<xsl:param name="tamanho" />
		
		<xsl:variable name="tamanho-tabela" select="$tamanho - round($tamanho * $recuo-direito-tabelas)"/>
		
		<fo:table-row>
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
			<fo:table-cell number-columns-spanned="2">
				<fo:block>
					<fo:table table-layout="fixed">
						<xsl:variable name="coluna2" select="round($tamanho-tabela * 0.15)"/>
						<xsl:variable name="coluna3" select="round($tamanho-tabela * 0.15)"/>
						<xsl:variable name="coluna1" select="$tamanho-tabela - $coluna2 - $coluna3"/>
						
						<fo:table-column column-width="{$coluna1}mm" />
						<fo:table-column column-width="{$coluna2}mm" />
						<fo:table-column column-width="{$coluna3}mm" />
						<fo:table-body>
						
						<fo:table-row>
							<fo:table-cell padding-start="1mm" padding-end="1mm" padding-top="1mm" padding-bottom="1mm" border="{$thin-line-type}" border-top="{$thin-line-type}" border-bottom="{$thin-line-type}" text-align="left">
								<fo:block font-weight="bold">
									Documentos, Quantidade (especificar) e Observações:
								</fo:block>
							</fo:table-cell>		
							<fo:table-cell padding-start="1mm" padding-end="1mm" padding-top="1mm" padding-bottom="1mm" border="{$thin-line-type}" border-top="{$thin-line-type}" border-bottom="{$thin-line-type}" text-align="left">
								<fo:block font-weight="bold">
									Folhas Simples:
								</fo:block>
							</fo:table-cell>		
							<fo:table-cell padding-start="1mm" padding-end="1mm" padding-top="1mm" padding-bottom="1mm" border="{$thin-line-type}" border-top="{$thin-line-type}" border-bottom="{$thin-line-type}" text-align="left">
								<fo:block font-weight="bold">
									Folhas Autenticadas:
								</fo:block>
							</fo:table-cell>		
						</fo:table-row>						
						
						
							<xsl:for-each select="info-processo/info-peticao/info">
								<xsl:choose>
									<xsl:when test="substring(@tipo,1,10) = 'DOCUMENTO_'">
										<xsl:call-template name="imprimir-linha-copia" />
									</xsl:when>
									<xsl:otherwise>
									</xsl:otherwise>
								</xsl:choose>
							</xsl:for-each>
						</fo:table-body>
					</fo:table>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>

	<xsl:template name="imprimir-linha-copia">
		<xsl:variable name="tipo" select="@tipo" />
		<xsl:variable name="aux1" select="@aux1" />
		<xsl:variable name="aux2" select="@aux2" />
		<fo:table-row>
			<fo:table-cell padding-start="1mm" padding-end="1mm" padding-top="1mm" padding-bottom="1mm" border="{$thin-line-type}" border-top="{$thin-line-type}" border-bottom="{$thin-line-type}" text-align="left">
				<fo:block>
					<xsl:value-of select="text()" />
				</fo:block>
			</fo:table-cell>		
			<fo:table-cell padding-start="1mm" padding-end="1mm" padding-top="1mm" padding-bottom="1mm" border="{$thin-line-type}" border-top="{$thin-line-type}" border-bottom="{$thin-line-type}" text-align="left">
				<fo:block>
					<xsl:value-of select="$aux1" />
				</fo:block>
			</fo:table-cell>		
			<fo:table-cell padding-start="1mm" padding-end="1mm" padding-top="1mm" padding-bottom="1mm" border="{$thin-line-type}" border-top="{$thin-line-type}" border-bottom="{$thin-line-type}" text-align="left">
				<fo:block>
					<xsl:value-of select="$aux2" />
				</fo:block>
			</fo:table-cell>		
		</fo:table-row>
	</xsl:template>
	

	
	<xsl:template name="imprimir-documentos-anexados">
		<xsl:param name="tamanho" />
		
		<xsl:variable name="tamanho-tabela" select="$tamanho - round($tamanho * $recuo-direito-tabelas)"/>
		
		<fo:table-row>
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
			<fo:table-cell number-columns-spanned="2">
				<fo:block>
					<fo:table table-layout="fixed">
						<xsl:variable name="coluna1" select="round($tamanho-tabela * 0.03)"/>
						<xsl:variable name="coluna2" select="round($tamanho-tabela * 0.87)"/>
						<xsl:variable name="coluna3" select="$tamanho-tabela - $coluna1 - $coluna2"/>
						
						<fo:table-column column-width="{$coluna1}mm" />
						<fo:table-column column-width="{$coluna2}mm" />
						<fo:table-column column-width="{$coluna3}mm" />
						<fo:table-body>
							<xsl:choose>
								<xsl:when test="(count(info-processo/periodo-de-graca/documento) + count(prioridades/prioridade/documento) + count(acessos-mat-biologico/acesso/documento) + count(documentos/documento)) = 0">
									<xsl:call-template name="imprimir-linha-documento">
										<xsl:with-param name="doc-code" select="$nulo"/>
										<xsl:with-param name="paginas" select="$nulo"/>
									</xsl:call-template>
								</xsl:when>
								<xsl:otherwise>
									<xsl:for-each select="info-processo/periodo-de-graca/documento | prioridades/prioridade/documento | acessos-mat-biologico/acesso/documento | documentos/documento">
										<xsl:variable name="docCode" select="@doc-code"/>
										
										<xsl:choose>
											<xsl:when test="$docCode = $ESPEC-BR">
												<xsl:for-each select="secao">
													<xsl:call-template name="imprimir-linha-documento">
														<xsl:with-param name="doc-code" select="@doc-code"/>
														<xsl:with-param name="paginas" select="@contagem-paginas"/>
													</xsl:call-template>
												</xsl:for-each>
											</xsl:when>
											<xsl:otherwise>
												<xsl:call-template name="imprimir-linha-documento">
													<xsl:with-param name="doc-code" select="$docCode"/>
													<xsl:with-param name="paginas" select="@total-paginas"/>
												</xsl:call-template>
											</xsl:otherwise>
										</xsl:choose>
									</xsl:for-each>
								</xsl:otherwise>
							</xsl:choose>
						</fo:table-body>
					</fo:table>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>
	
	<xsl:template name="imprimir-dados-gru">
		<xsl:param name="tamanho" />
		
		<xsl:variable name="tamanho-tabela" select="$tamanho - round($tamanho * $recuo-direito-tabelas)"/>
		
		<fo:table-row>
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
			<fo:table-cell number-columns-spanned="2">
				<fo:block>
					<fo:table table-layout="fixed">
						<xsl:variable name="coluna1" select="round($tamanho-tabela * 0.03)"/>
						<xsl:variable name="coluna2" select="round($tamanho-tabela * 0.87)"/>
						<xsl:variable name="coluna3" select="$tamanho-tabela - $coluna1 - $coluna2"/>
						
						<fo:table-column column-width="{$coluna1}mm" />
						<fo:table-column column-width="{$coluna2}mm" />
						<fo:table-column column-width="{$coluna3}mm" />
						<fo:table-body>
							<xsl:choose>
								<xsl:when test="count(info-processo/GRUs/gru) = 0">
									<xsl:call-template name="imprimir-linha-dados-gru">
										<xsl:with-param name="doc-code" select="$nulo"/>
										<xsl:with-param name="paginas" select="$nulo"/>
									</xsl:call-template>
								</xsl:when>
								<xsl:otherwise>
									<xsl:for-each select="info-processo/GRUs/gru">

										<xsl:variable name="docCodeGru">
											<xsl:choose>
												<xsl:when test="@isenta = $true">
													<xsl:value-of select="'GRU-ISENTA'" />
												</xsl:when>												
												<xsl:otherwise>
													<xsl:value-of select="'GRU'" />
												</xsl:otherwise>
											</xsl:choose>
										</xsl:variable>
											
										<xsl:call-template name="imprimir-linha-dados-gru">										
											<xsl:with-param name="doc-code" select="$docCodeGru"/>
											<xsl:with-param name="paginas" select="$nulo"/>
										</xsl:call-template>
									</xsl:for-each>
								</xsl:otherwise>
							</xsl:choose>
						</fo:table-body>
					</fo:table>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>

	<xsl:template name="imprimir-linha-documento">
		<xsl:param name="doc-code" />
		<xsl:param name="paginas" />
		
		<xsl:variable name="texto">
			<xsl:choose>
				<xsl:when test="$doc-code = $nulo">
					<xsl:value-of select="$nulo" />
				</xsl:when>
				<xsl:when test="$legendasDocumentosNS/leg[@doc-code = $doc-code]">
					<xsl:value-of select="$legendasDocumentosNS/leg[@doc-code = $doc-code]/@texto" />
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="$legendasDocumentosNS/leg[@doc-code = $naoConhecido]/@texto"/>
				</xsl:otherwise>
			</xsl:choose>
			<xsl:if test="not(normalize-space(@observacoes) = $vazio)">
				<xsl:value-of select="concat(' [', @observacoes, ']')"/>
			</xsl:if>
			<xsl:choose>
				<xsl:when test="$doc-code = 'GRU'">
					<xsl:variable name="gru">
						<xsl:call-template name="formatar-gru">
							<xsl:with-param name="numGRU" select="@gru-numero"/>
						</xsl:call-template>
					</xsl:variable>
					<xsl:variable name="gru-complemento">
						<xsl:call-template name="formatar-complemento-gru" />
					</xsl:variable>
					<xsl:value-of select="concat(' [C&#243;digo de servi&#231;o: ', @gru-servico, ', N&#250;mero: ', $gru, ', Nome do sacado: ', @gru-requerente, $gru-complemento, ']')"/>
				</xsl:when>
				<xsl:when test="($doc-code = 'PRIORIDADE') or ($doc-code = 'PRIORTRADUC')">
					<xsl:variable name="numero-prioridade">
						<xsl:choose>
							<xsl:when test="../@interna = $true">
								<xsl:call-template name="formatar-numero-processo">
									<xsl:with-param name="tipo" select="../tipo-extenso"/>
									<xsl:with-param name="numero" select="../numero"/>
								</xsl:call-template>
							</xsl:when>
							<xsl:otherwise>
								<xsl:value-of select="../numero"/>
							</xsl:otherwise>
						</xsl:choose>
					</xsl:variable>
					<xsl:value-of select="concat(' [N&#250;mero da prioridade: ', $numero-prioridade, ']')"/>
				</xsl:when>
			</xsl:choose>
		</xsl:variable>
		<xsl:variable name="mostrar-paginas">
			<xsl:choose>
				<xsl:when test="$legendasDocumentosNS/leg[@doc-code = $doc-code]">
					<xsl:value-of select="$legendasDocumentosNS/leg[@doc-code = $doc-code]/@paginas" />
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="$legendasDocumentosNS/leg[@doc-code = $naoConhecido]/@paginas"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		
		<fo:table-row>
			<fo:table-cell padding-start="1mm" padding-end="1mm" padding-top="1mm" padding-bottom="1mm" border="{$thin-line-type}" text-align="center">
				<fo:block>
					<xsl:choose>
						<xsl:when test="$doc-code = $nulo">
							-
						</xsl:when>
						<xsl:otherwise>
							X
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
			<fo:table-cell padding-start="1mm" padding-end="1mm" padding-top="1mm" padding-bottom="1mm" border="{$thin-line-type}" text-align="left">
				<fo:block>
					<xsl:value-of select="$texto"/>
				</fo:block>
			</fo:table-cell>
			<fo:table-cell padding-start="1mm" padding-end="1mm" padding-top="1mm" padding-bottom="1mm" border="{$thin-line-type}" text-align="right">
				<fo:block>
					<xsl:choose>
						<xsl:when test="$mostrar-paginas = $true">
							<xsl:value-of select="$paginas"/>
						</xsl:when>
						<xsl:otherwise>
							<xsl:value-of select="$nulo"/>
						</xsl:otherwise>
					</xsl:choose>
					<xsl:text>&#x20;</xsl:text>
					p.
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>
	
	<xsl:template name="imprimir-linha-dados-gru">
		<xsl:param name="doc-code" />
		<xsl:param name="paginas" />
		
		<xsl:variable name="texto">
			<xsl:choose>
				<xsl:when test="$doc-code = $nulo">
					<xsl:value-of select="$nulo" />
				</xsl:when>
				<xsl:when test="$legendasDocumentosNS/leg[@doc-code = $doc-code]">
					<xsl:value-of select="$legendasDocumentosNS/leg[@doc-code = $doc-code]/@texto" />
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="$legendasDocumentosNS/leg[@doc-code = $naoConhecido]/@texto"/>
				</xsl:otherwise>
			</xsl:choose>
			
			<xsl:choose>
				<xsl:when test="($doc-code = 'GRU-ISENTA') or ($doc-code = 'GRU')">
					<xsl:variable name="gru">
						<xsl:call-template name="formatar-gru">
							<xsl:with-param name="numGRU" select="@numero"/>
						</xsl:call-template>
					</xsl:variable>
					<xsl:variable name="gru-complemento">
						<xsl:call-template name="formatar-complemento-gru-isenta" />
					</xsl:variable>
					<xsl:value-of select="concat(' [C&#243;digo de servi&#231;o: ', @servico, ', N&#250;mero: ', $gru, ', Nome do sacado: ', @requerente, $gru-complemento, ']')"/>
				</xsl:when>				
			</xsl:choose>
		</xsl:variable>
		<xsl:variable name="mostrar-paginas">
			<xsl:choose>
				<xsl:when test="$legendasDocumentosNS/leg[@doc-code = $doc-code]">
					<xsl:value-of select="$legendasDocumentosNS/leg[@doc-code = $doc-code]/@paginas" />
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="$legendasDocumentosNS/leg[@doc-code = $naoConhecido]/@paginas"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		
		<fo:table-row>
			<fo:table-cell padding-start="1mm" padding-end="1mm" padding-top="1mm" padding-bottom="1mm" border="{$thin-line-type}" text-align="center">
				<fo:block>
					<xsl:choose>
						<xsl:when test="$doc-code = $nulo">
							-
						</xsl:when>
						<xsl:otherwise>
							X
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
			<fo:table-cell padding-start="1mm" padding-end="1mm" padding-top="1mm" padding-bottom="1mm" border="{$thin-line-type}" text-align="left">
				<fo:block>
					<xsl:value-of select="$texto"/>
				</fo:block>
			</fo:table-cell>
			<fo:table-cell padding-start="1mm" padding-end="1mm" padding-top="1mm" padding-bottom="1mm" border="{$thin-line-type}" text-align="right">
				<fo:block>					
					<xsl:choose>
						<xsl:when test="$doc-code = $nulo">
							---
						</xsl:when>
						<xsl:when test="@isenta = $true">
							isenta
						</xsl:when>												
						<xsl:otherwise>
							n&#227;o isenta
						</xsl:otherwise>
					</xsl:choose>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>

	<xsl:template name="imprimir-declaracoes">
		<xsl:param name="tamanho" />
		
		<fo:table-row>
			<fo:table-cell>
				<fo:block/>
			</fo:table-cell>
			<fo:table-cell number-columns-spanned="2">
				<fo:block>
					<fo:table table-layout="fixed">
						<fo:table-column column-width="{$largura-checkbox}mm" />
						<fo:table-column column-width="{$tamanho - $largura-checkbox}mm" />
						<fo:table-body>
							<xsl:for-each select="declaracoes/*">
								<fo:table-row>
									<fo:table-cell>
										<fo:block>
											<xsl:choose>
												<xsl:when test=". = $true">
													<xsl:call-template name="imprimir-checkbox">
														<xsl:with-param name="checado" select="$true"/>
													</xsl:call-template>
												</xsl:when>
												<xsl:otherwise>
													<xsl:call-template name="imprimir-checkbox">
														<xsl:with-param name="checado" select="$false"/>
													</xsl:call-template>
												</xsl:otherwise>
											</xsl:choose>
										</fo:block>
									</fo:table-cell>
									<fo:table-cell text-align="justify">
										<fo:block>
											<xsl:value-of select="@texto"/>
										</fo:block>
									</fo:table-cell>
								</fo:table-row>
								<fo:table-row height="1mm" keep-with-previous="always">
									<fo:table-cell>
										<fo:block/>
									</fo:table-cell>
								</fo:table-row>
								<fo:table-row>
									<fo:table-cell height="0.5mm">
										<fo:block></fo:block>
									</fo:table-cell>
								</fo:table-row>
							</xsl:for-each>
						</fo:table-body>
					</fo:table>
				</fo:block>
			</fo:table-cell>
		</fo:table-row>
	</xsl:template>	

	<!-- ***** Métodos de auxiliares ***** -->

	<xsl:template name="imprimir-checkbox">
		<xsl:param name="checado"/>
		<xsl:choose>
			<xsl:when test="$checado = $true">
				<xsl:text>&#x5B;</xsl:text>
				<fo:inline font-weight="bold" padding-start="1mm" padding-end="1mm" padding-top="1mm" padding-bottom="1mm">
					<xsl:text>x</xsl:text>
				</fo:inline>
				<xsl:text>&#x5D;</xsl:text>
			</xsl:when>
			<xsl:otherwise>
				<xsl:text>&#x5B;</xsl:text>
				<fo:inline padding-left="5px">
					<xsl:text>&#x20;</xsl:text>
				</fo:inline>
				<xsl:text>&#x5D;</xsl:text>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:template name="formatar-gru">
		<xsl:param name="numGRU"/>
		
		<xsl:choose>
			<xsl:when test="(normalize-space($numGRU) = $vazio)">
				<xsl:value-of select="$nulo" />
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(
					'0',
					substring($numGRU,1,1), '.',
					substring($numGRU,2,3), '.',
					substring($numGRU,5,1), '.',
					substring($numGRU,6,1), '.',
					substring($numGRU,7,2), '.',
					substring($numGRU,9,7), '.',
					substring($numGRU,16,1) )" />
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:template name="formatar-complemento-gru">
		<xsl:variable name="rpi">
			<xsl:choose>
				<xsl:when test="(@gru-rpi = 0) or (normalize-space(@gru-rpi) = $vazio)">
					<xsl:value-of select="$vazio" />
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="concat(', Referente &#224; RPI: ', @gru-rpi)" />
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		<xsl:variable name="quantidade">
			<xsl:choose>
				<xsl:when test="(@gru-quantidade = 0) or (normalize-space(@gru-quantidade) = $vazio)">
					<xsl:value-of select="$vazio" />
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="concat(', Quantidade: ', @gru-quantidade)" />
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		
		<xsl:value-of select="concat( $quantidade, $rpi )" />
	</xsl:template>
	
	<xsl:template name="formatar-complemento-gru-isenta">
		<xsl:variable name="rpi">
			<xsl:choose>
				<xsl:when test="(@rpi = 0) or (normalize-space(@rpi) = $vazio)">
					<xsl:value-of select="$vazio" />
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="concat(', Referente &#224; RPI: ', @rpi)" />
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		<xsl:variable name="quantidade">
			<xsl:choose>
				<xsl:when test="(@quantidade = 0) or (normalize-space(@quantidade) = $vazio)">
					<xsl:value-of select="$vazio" />
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="concat(', Quantidade: ', @quantidade)" />
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		
		<xsl:value-of select="concat( $quantidade, $rpi )" />
	</xsl:template>

	<xsl:template name="formatar-cpf">
		<xsl:param name="numCPF"/>
		
		<xsl:choose>
			<xsl:when test="(normalize-space($numCPF) = $vazio)">
				<xsl:value-of select="$nulo" />
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(
					substring($numCPF,1,3), '.',
					substring($numCPF,4,3), '.',
					substring($numCPF,7,3), '-',
					substring($numCPF,10,2) )" />
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:template name="formatar-cep">
		<xsl:param name="numCEP"/>
		
		<xsl:choose>
			<xsl:when test="(normalize-space($numCEP) = $vazio)">
				<xsl:value-of select="$nulo" />
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(
					substring($numCEP,1,5), '-',
					substring($numCEP,6,3) )" />
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:template name="formatar-fone-fax">
		<xsl:param name="num"/>
		
		<xsl:choose>
			<xsl:when test="(normalize-space($num) = $vazio)">
				<xsl:value-of select="$nulo" />
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(
					'+55(',
					substring($num,1,2), ')',
					substring($num,3,8) )" />
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:template name="formatar-cnpj">
		<xsl:param name="numCNPJ"/>
		
		<xsl:choose>
			<xsl:when test="(normalize-space($numCNPJ) = $vazio)">
				<xsl:value-of select="$nulo" />
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="concat(
					substring($numCNPJ,1,2), '.',
					substring($numCNPJ,3,3), '.',
					substring($numCNPJ,6,3), '/',
					substring($numCNPJ,9,4), '-',
					substring($numCNPJ,13,2) )" />
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:template name="formatar-numero-processo">
		<xsl:param name="tipo"/>
		<xsl:param name="numero"/>
		
		<xsl:variable name="tiposPIMUCA" select="'PI,MU,C1,C2,C3,C4,C5,C6,C7,C8,C9,C0,PP'"/>
		<xsl:choose>
			<xsl:when test="(normalize-space($numero) = $vazio)">
				<xsl:value-of select="$nulo" />
			</xsl:when>
			<xsl:otherwise>
				<xsl:choose>
					<xsl:when test="contains($tiposPIMUCA,$tipo)">
						<xsl:value-of select="concat(
							$tipo, ' ',
							substring($numero,1,7), '-',
							substring($numero,8,1) )" />
					</xsl:when>
					<xsl:when test="$tipo = 'BR'">
						<xsl:value-of select="concat(
							'BR ',
							substring($numero,1,2), ' ',
							substring($numero,3,4), ' ',
							substring($numero,7,6), ' ',
							substring($numero,13,1) )" />
					</xsl:when>
					<xsl:otherwise>
						<xsl:value-of select="$nulo" />
					</xsl:otherwise>
				</xsl:choose>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<xsl:template name="buscar-nome-gru">
		<xsl:param name="requerente"/>
		
		<xsl:variable name="nome">
			<xsl:choose>
				<xsl:when test="$interessado/@tipo-legal = $pessoaFisica">
					<xsl:value-of select="concat($interessado/livro-endereco/nome, ' ',$interessado/livro-endereco/sobrenome)"/>
				</xsl:when>
				<xsl:when test="$interessado/@tipo-legal = $pessoaJuridica">
					<xsl:value-of select="$interessado/livro-endereco/nome-organizacao"/>
				</xsl:when>
				<xsl:otherwise>
					<xsl:value-of select="$vazio"/>
				</xsl:otherwise>
			</xsl:choose>
		</xsl:variable>
		<xsl:choose>
			<xsl:when test="normalize-space($nome) = $vazio">
				<xsl:value-of select="$nulo"/>
			</xsl:when>
			<xsl:otherwise>
				<xsl:value-of select="$nome"/>
			</xsl:otherwise>
		</xsl:choose>
	</xsl:template>

	<!-- ***** Métodos de definição de páginas ***** -->

	<xsl:template name="prepararLayout">
		<fo:layout-master-set>

			<fo:simple-page-master master-name="PrimeiraPagina"
				page-height="{$page_height}mm" page-width="{$page_width}mm"
				margin-top="{$page-top-margin}mm" margin-bottom="{$page-bottom-margin}mm"
				margin-left="{$page-left-margin}mm" margin-right="{$page-right-margin}mm">
				<fo:region-body margin-top="{$margem-cabecalho-PP}mm" margin-bottom="{$margem-rodape + 2}mm" />
				<fo:region-before region-name="cabecalhoPP" extent="{$margem-cabecalho-PP}mm" />
				<fo:region-after extent="{$margem-rodape}mm" />
			</fo:simple-page-master>
	
			<fo:simple-page-master master-name="DemaisPaginas"
				page-height="{$page_height}mm" page-width="{$page_width}mm"
				margin-top="{$page-top-margin}mm" margin-bottom="{$page-bottom-margin}mm"
				margin-left="{$page-left-margin}mm" margin-right="{$page-right-margin}mm">
				<fo:region-body margin-top="{$margem-cabecalho-DP}mm" margin-bottom="{$margem-rodape + 2}mm" />
				<fo:region-before region-name="cabecalhoDP" extent="{$margem-cabecalho-DP}mm" />
				<fo:region-after extent="{$margem-rodape}mm" />
			</fo:simple-page-master>
	
			<fo:page-sequence-master master-name="Formulario">
				<fo:repeatable-page-master-alternatives>
					<fo:conditional-page-master-reference
						master-reference="PrimeiraPagina" page-position="first" />
					<fo:conditional-page-master-reference
						master-reference="DemaisPaginas" page-position="rest" />
				</fo:repeatable-page-master-alternatives>
			</fo:page-sequence-master>
	
		</fo:layout-master-set>
	</xsl:template>

	<xsl:template name="prepararCabecalhosERodapes">
		<!-- Definir Rodapés -->
		<fo:static-content flow-name="xsl-region-after">
			<fo:block text-align="center" font-size="{$footer-font-size}" color="gray">
				GRU - 
				<xsl:call-template name="formatar-gru">
					<xsl:with-param name="numGRU" select="documentos/documento[@doc-code = 'GRU']/@gru-numero" />
				</xsl:call-template>
			</fo:block>
		</fo:static-content>

		<fo:static-content flow-name="cabecalhoPP">
			<!-- Espaços reservados para as etiquetas virtuais -->
			<fo:table table-layout="fixed" border-bottom="{$thick-line-type}">
				<xsl:variable name="largura-etiquetas" select="round($largura-disponivel div 3)"/>
				<fo:table-column column-width="{$largura-etiquetas}mm" />
				<fo:table-column column-width="{$largura-etiquetas}mm" />
				<fo:table-column column-width="{$largura-etiquetas}mm" />
				<fo:table-body>
					<fo:table-row font-size="{$footer-font-size}" font-weight="bold">
						<fo:table-cell number-columns-spanned="3">
							<fo:block text-align="center">
								&lt; Uso exclusivo do INPI &gt;
							</fo:block>
						</fo:table-cell>
					</fo:table-row>
					<fo:table-row height="25mm">
						<fo:table-cell border-right="{$thin-line-type}">
							<fo:block/>
						</fo:table-cell>
						<fo:table-cell border-left="{$thin-line-type}"
							border-right="{$thin-line-type}">
							<fo:block/>
						</fo:table-cell>
						<fo:table-cell border-left="{$thin-line-type}">
							<fo:block/>
						</fo:table-cell>
					</fo:table-row>
					<fo:table-row font-size="{$footer-font-size}">
						<fo:table-cell padding-after="0.5mm">
							<fo:block text-align="center" padding-top="1mm">
								Espa&#231;o reservado para o protocolo
							</fo:block>
						</fo:table-cell>
						<fo:table-cell>
							<fo:block text-align="center" padding-top="1mm">
								Espa&#231;o reservado para a etiqueta
							</fo:block>
						</fo:table-cell>
						<fo:table-cell>
							<fo:block text-align="center" padding-top="1mm">
								Espa&#231;o reservado para o c&#243;digo QR
							</fo:block>
						</fo:table-cell>
					</fo:table-row>
				</fo:table-body>
			</fo:table>

			<xsl:call-template name="cabecalhoPadrao" />
		</fo:static-content>

		<fo:static-content flow-name="cabecalhoDP">
			<xsl:call-template name="cabecalhoPadrao" />
		</fo:static-content>
	</xsl:template>
	
	<xsl:template name="cabecalhoPadrao">
		<!-- Cabeçaos padrão -->
		<fo:table table-layout="fixed" border-bottom="{$thick-line-type}"
			font-weight="bold">
			<xsl:variable name="cabecalho-p1-brasao" select="round($largura-disponivel * 0.15)"/>
			<xsl:variable name="cabecalho-p1-logo" select="round($largura-disponivel * 0.25)"/>
			<xsl:variable name="cabecalho-p1-texto" select="$largura-disponivel - $cabecalho-p1-brasao - $cabecalho-p1-logo"/>
			
			<fo:table-column column-width="{$cabecalho-p1-brasao}mm" />
			<fo:table-column column-width="{$cabecalho-p1-logo}mm" />
			<fo:table-column column-width="{$cabecalho-p1-texto}mm" />
			<fo:table-body>
				<fo:table-row display-align="center">
					<fo:table-cell padding-before="1mm" padding-after="1mm">
						<fo:block text-align="center">
							<fo:external-graphic>
								<xsl:attribute name="src">
									<xsl:value-of select="'./brasao.png'" />
								</xsl:attribute>
								<xsl:attribute name="content-height">
									<xsl:value-of select="'1.3cm'" />
								</xsl:attribute>
							</fo:external-graphic>
						</fo:block>
					</fo:table-cell>
					<fo:table-cell>
						<fo:block text-align="center">
							<fo:external-graphic>
								<xsl:attribute name="src">
									<xsl:value-of select="'./INPI.png'" />
								</xsl:attribute>
								<xsl:attribute name="content-width">
									<xsl:value-of select="'3.5cm'" />
								</xsl:attribute>
							</fo:external-graphic>
						</fo:block>
					</fo:table-cell>
					<fo:table-cell font-weight="bold" text-align="center">
						<fo:block>
							INSTITUTO NACIONAL DA PROPRIEDADE INDUSTRIAL
						</fo:block>
						<fo:block>
							Sistema de Gest&#227;o da Qualidade
						</fo:block>
						<fo:block>
							Diretoria de Patentes
						</fo:block>
					</fo:table-cell>
				</fo:table-row>
			</fo:table-body>
		</fo:table>
		<fo:table table-layout="fixed" border-bottom="{$thick-line-type}"
			font-weight="bold" text-align="center">
			<xsl:variable name="cabecalho-p2-c1" select="round($largura-disponivel * 0.25)"/>
			<xsl:variable name="cabecalho-p2-c2" select="round($largura-disponivel * 0.50)"/>
			<xsl:variable name="cabecalho-p2-c3" select="round($largura-disponivel * 0.125)"/>
			<xsl:variable name="cabecalho-p2-c4" select="$largura-disponivel - $cabecalho-p2-c1 - $cabecalho-p2-c2 - $cabecalho-p2-c3"/>
			
			<fo:table-column column-width="{$cabecalho-p2-c1}mm" />
			<fo:table-column column-width="{$cabecalho-p2-c2}mm" />
			<fo:table-column column-width="{$cabecalho-p2-c3}mm" />
			<fo:table-column column-width="{$cabecalho-p2-c4}mm" />
			<fo:table-body>
				<fo:table-row border-bottom="{$thick-line-type}">
					<fo:table-cell display-align="center"
						padding-before="0.5mm" padding-after="0.5mm" border-bottom="{$thick-line-type}">
						<fo:block>
							<fo:table table-layout="fixed">
								<xsl:variable name="cabecalho-p2-c1-1" select="round($cabecalho-p2-c1 * 0.40)"/>
								<xsl:variable name="cabecalho-p2-c1-2" select="$cabecalho-p2-c1 - $cabecalho-p2-c1-1"/>
								
								<fo:table-column column-width="{$cabecalho-p2-c1-1}mm" />
								<fo:table-column column-width="{$cabecalho-p2-c1-2}mm" />
								<fo:table-body>
									<fo:table-row>
										<fo:table-cell display-align="center" padding-before="0.5mm" padding-after="0.5mm">
											<fo:block>
												<fo:external-graphic>
													<xsl:attribute name="src">
														<xsl:value-of select="'./DIRPA.png'" />
													</xsl:attribute>
													<xsl:attribute name="content-width">
														<xsl:value-of select="'1.6cm'" />
													</xsl:attribute>
												</fo:external-graphic>
											</fo:block>
										</fo:table-cell>
										<fo:table-cell display-align="center" padding-before="0.5mm" padding-after="0.5mm">
											<fo:block>
												<fo:external-graphic>
													<xsl:attribute name="src">
														<xsl:value-of select="'./ePatentes.png'" />
													</xsl:attribute>
													<xsl:attribute name="content-width">
														<xsl:value-of select="'2.2cm'" />
													</xsl:attribute>
												</fo:external-graphic>
											</fo:block>
										</fo:table-cell>
									</fo:table-row>
								</fo:table-body>
							</fo:table>
						</fo:block>
					</fo:table-cell>
					<fo:table-cell border-left="{$thick-line-type}" border-bottom="{$thick-line-type}"
						padding-start="0.5mm" padding-before="0.5mm">
						<fo:block text-align="left" font-size="{$header-font-size}">
							Tipo de Documento:
						</fo:block>
						<fo:block text-align="center">
							Formul&#225;rio Eletr&#244;nico
						</fo:block>
					</fo:table-cell>
					<fo:table-cell display-align="center" border-left="{$thick-line-type}" border-bottom="{$thick-line-type}">
						<fo:block>
							DIRPA
						</fo:block>
					</fo:table-cell>
					<fo:table-cell border-left="{$thick-line-type}" border-bottom="{$thick-line-type}"
						padding-start="0.5mm" padding-before="0.5mm">
						<fo:block text-align="left" font-size="{$header-font-size}">
							P&#225;gina:
						</fo:block>
						<fo:block text-align="center">
							<fo:page-number />
							/
							<fo:page-number-citation ref-id="theEnd" />
						</fo:block>
					</fo:table-cell>
				</fo:table-row>
				<fo:table-row border-bottom="{$thick-line-type}">
					<fo:table-cell number-rows-spanned="2"
						number-columns-spanned="2" padding-start="0.5mm" padding-before="0.5mm">
						<fo:block text-align="left" font-size="{$header-font-size}">
							T&#237;tulo do Documento:
						</fo:block>
						<fo:block text-align="center" font-size="{$big-font-size}"
							padding-before="2mm" padding-after="2mm">
							Pedido de Cópia
						</fo:block>
					</fo:table-cell>
					<fo:table-cell border-left="{$thick-line-type}" border-bottom="{$thick-line-type}"
						padding-start="0.5mm" padding-before="0.5mm">
						<fo:block text-align="left" font-size="{$header-font-size}">
							C&#243;digo:
						</fo:block>
						<fo:block text-align="center">
							FQ005
						</fo:block>
					</fo:table-cell>
					<fo:table-cell border-left="{$thick-line-type}" border-bottom="{$thick-line-type}"
						padding-start="0.5mm" padding-before="0.5mm">
						<fo:block text-align="left" font-size="{$header-font-size}">
							Vers&#227;o:
						</fo:block>
						<fo:block text-align="center">
							<xsl:value-of select="number($versaoFormulario)" />
						</fo:block>
					</fo:table-cell>
				</fo:table-row>
				<fo:table-row border-bottom="{$thick-line-type}">
					<fo:table-cell border-left="{$thick-line-type}"
						padding-start="0.5mm" number-columns-spanned="2" padding-before="0.5mm">
						<fo:block text-align="left" font-size="{$header-font-size}">
							Procedimento:
						</fo:block>
						<fo:block text-align="center">
							N&#227;o Aplic&#225;vel
						</fo:block>
					</fo:table-cell>
				</fo:table-row>
			</fo:table-body>
		</fo:table>
		<fo:table>
			<fo:table-body>
				<!-- Espaçador -->
				<fo:table-row height="1mm" keep-with-previous="always">
					<fo:table-cell>
						<fo:block/>
					</fo:table-cell>
				</fo:table-row>
			</fo:table-body>
		</fo:table>
	</xsl:template>

</xsl:stylesheet>
